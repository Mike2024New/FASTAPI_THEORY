import uvicorn
from fastapi import FastAPI

"""
Первое знакомство с приложением на fastapi.
Запустить это приложение и перейти по адресу: http://127.0.0.1:8000/

Для того чтобы увидеть документацию этого приложения, можно перейти на docs - интерактивная документация на 
которой можно выполнять запросы, или reDoc простая лаконичная документация:
http://127.0.0.1:8000/docs -> swagger интерактивная документация с возможностью делать запросы
http://127.0.0.1:8000/redoc -> redoc лаконичная удобочитаемая документация
=======================================================================================================
ВАЖНО! ЗАПУСКАТЬ ПРИЛОЖЕНИЕ ЧЕРЕЗ ТЕРМИНАЛ, ТОГДА ОБНОВЛЕНИЕ В ФАЙЛЕ АВТОМАТИЧЕСКИ ПЕРЕЗАГРУЖАЕТ СЕРВЕР
uvicorn THEORY.lsn0:app --reload
ctrl+c, чтобы выйти
"""

app = FastAPI()  # создание приложения fastapi


# домашняя страница домен + эндпоинт, например: http://127.0.0.1:8000/
@app.get("/")
def home():
    return {"msg": "Добро пожаловать!"}


# простой path параметр (когда путь формируется динамически) для примера url: http://127.0.0.1:8000/page/2/
@app.get("/page/{page}/")
def open_page(page: int):
    return {"msg": f"Станица {page} открыта"}


if __name__ == '__main__':
    """
    такой способ запуска (uvicorn.run) допустим, но reload, не будет работать так как ожидается.
    reload, даёт возможность не перезапускать IDE, при внесении изменений в файлы, поэтому
    вместо этого лучше запускаться из терминала, для данного приложения использовать
    uvicorn THEORY.lsn0:app --reload
    ctrl+c, чтобы выйти
    """
    uvicorn.run(
        app="lsn0:app",  # привязка файла к приложению / название текущего модуля без расширения + название приложения
        reload=True  # перезагружать сервер, но работает все равно после включения отключения файла
    )

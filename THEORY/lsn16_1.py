from UTILS.APP_RUN import app_run
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware

"""
CORS - это политика разрешения внешним сайтам (доменам, портам) делать запросы к данному сайту с помощью java script 
методами AJAX. По умолчанию стоит запрет на все такие запросы (при этом обычный пользователь спокойно может открывать
html страницу, так как он выполняет прямой HTTP запрос). И если нужно разрешить конкретные внешние сайты, то для этого
используется промежуточный слой CORSMiddleware, в котором прописываются разрешенные сайты (в аргументе allow_origins), 
также указывается разрешено ли использовать Cookie, то есть будет ли иметь js доступ к кукам (в аргументе 
allow_credentials), поддерживаемые методы в allow_methods, и конкретные заголовки в allow_headers. Если указать * то 
это обозначает разрешить все.
----------------------------------------------------------------------------------------------------------------------
Чтобы увидеть это более наглядно, созданы файлы "lsn16_1_8080.py", и "lsn16_1_8090.py" которые работают на портах
8080 и 8090 соответственно. Только 8080 порт js запросы разрешены, а в 8090 нет.
Запустить все 3 скрипта, чтобы увидеть пример.
"""

# http://127.0.0.1:8000/
# http://127.0.0.1:8000/docs/
# http://127.0.0.1:8000/redoc/
app = FastAPI()
app.name = "app"

origins = [
    "http://127.0.0.1:8080"  # разрешенный домен с которого можно обращаться к методам этого домена
]

app.add_middleware(
    CORSMiddleware,  # type:ignore
    allow_origins=origins,  # явно разрешенные источники запросов (те сайты которые могут использовать js Ajax запросы)
    allow_credentials=True,  # разрешить использование куков и авторизационных данных
    allow_methods=["*"],  # разрешить все методы HTTP
    allow_headers=["*"],  # разрешить все заголовки HEADERS
)


# http://localhost:8000/data/
# http://127.0.0.1:8000/data/
@app.get("/data")
async def ex1():
    return {"msg": "Ответ с сервера на 8000"}


if __name__ == '__main__':
    app_run(file=__file__, app_name=app.name)

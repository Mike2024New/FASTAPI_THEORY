from UTILS.APP_RUN import app_run
from fastapi import FastAPI, Cookie

# http://127.0.0.1:8000/docs
# http://127.0.0.1:8000/redoc
app = FastAPI()
app.name = "app"

"""
Для того, чтобы принимать файлы Cookie, в fastapi есть объект Cookie, который явно это задаёт.
Cookie это отдельный канал передачи данных, который помогает управлять взаимодействием между клиентом и сервером, 
например с помощью cookie сервер может понять, что клиент уже авторизован (иначе авторизовываться нужно было бы после
каждой перезагрузки страницы, также в cookie файлы может записываться активность пользователя, это часто используется
в рекламной аналитикее), в куках могут храниться настройки пользователя, например тема сайта ночная или дневная.
Куки файлы могут храниться как на сервере (под id который связывает эти данные с конкретным клиентом), так и на клиенте,
что позволяет не перегружать сервер избыточными данными.
-----------------------------------------------------------------------------------
ВАЖНО! Cookie настоятельно не рекомендуется передавать по протоколу http, как это сделано в примерах здесь. Обычно для 
них используется протокол https, который поддерживает передачу данных в зашифрованном виде от перехвата их третьими 
лицами. Для этого используется TLS рукопожатие, посмотреть подробнее о прототипе такой системы можно в разделе 
BONUS/bs2.py, там реализован сильно упрощенный пример открытия безопасного соединения между клиентом и браузером.
"""


@app.get("/ex1/")
async def ex1(session_id: str | None = Cookie(default=None)):
    print(session_id)
    return {"session_id": session_id}


if __name__ == '__main__':
    app_run(file=__file__, app_name=app.name)

2. Практические вопросы (код)
--------------------------------------------------
Вопрос 1: Реализуй GET эндпоинт с path параметром с проверкой диапазона числа. -> rq1.py
--------------------------------------------------
Вопрос 2: Создай GET эндпоинт с query параметрами и ограничениями (min_length, enum). -> rq1.py
--------------------------------------------------
Вопрос 3: Напиши POST эндпоинт с Pydantic моделью, исключающей приватные поля из ответа. -> rq2.py
--------------------------------------------------
Вопрос 4: Реализуй проверку и чтение cookie в FastAPI с выдачей 401 при отсутствии. -> rq3.py
--------------------------------------------------
Вопрос 5: Используй starlette path параметр для приема полного пути к файлу, вернуть только имя. -> rq4.py
--------------------------------------------------
Вопрос 6: Реализуй PUT эндпоинт с полной перезаписью пользователя. -> rq5.py
--------------------------------------------------
Вопрос 7: Реализуй PATCH эндпоинт с отдельной моделью и частичным обновлением. -> rq5.py
--------------------------------------------------
Вопрос 8: Напиши функцию сериализации модели через jsonable_encoder и обратного создания. -> rq6.py
--------------------------------------------------
Вопрос 9: Сделай HTML форму для ввода данных, создай GET и POST эндпоинты для работы с ней. -> rq7.py + for_rq7.html
--------------------------------------------------
Вопрос 10: Реализуй загрузку файла через UploadFile с проверкой типа и размера. -> rq8.py + for_rq8.html
--------------------------------------------------
Вопрос 11: Напиши эндпоинт с query параметром с alias.
--------------------------------------------------
Вопрос 12: Создай кастомный обработчик HTTPException с логированием и ответом.
--------------------------------------------------
Вопрос 13: Реализуй эндпоинт с несколькими query параметрами-списками.
--------------------------------------------------
Вопрос 14: Напиши приложение с обработкой query, path, body и form параметров.
--------------------------------------------------
Вопрос 15: Реализуй редирект с кодом 302.
--------------------------------------------------
Вопрос 16: Используй response_model_exclude_none и response_model_include для кастомизации ответов.
--------------------------------------------------
Вопрос 17: Создай вложенную Pydantic модель, обслуживаемую эндпоинтом.
--------------------------------------------------
Вопрос 18: Реализуй пагинацию через query параметры с валидацией.








from UTILS.APP_RUN import app_run
from fastapi import FastAPI

# http://127.0.0.1:8000/
# http://127.0.0.1:8000/docs/
# http://127.0.0.1:8000/redoc/
app = FastAPI()
app.name = "app"


@app.get("/ex1/")
def ex1():
    return


if __name__ == '__main__':
    app_run(file=__file__, app_name=app.name)
